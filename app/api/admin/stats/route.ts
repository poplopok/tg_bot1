import { type NextRequest, NextResponse } from "next/server"

// –ò–º–∏—Ç–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö (–≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö)
const mockStats = {
  totalChats: 23,
  totalMessages: 12847,
  totalUsers: 156,
  emotionDistribution: {
    positivity: 68,
    neutral: 25,
    aggression: 4,
    stress: 2,
    sarcasm: 1,
  },
  incidents: [
    {
      id: "1",
      chatId: -1001234567890,
      chatTitle: "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞",
      userId: 123456789,
      username: "alexey_k",
      message: "–≠—Ç–æ –ø–æ–ª–Ω—ã–π –±—Ä–µ–¥, –∫—Ç–æ —ç—Ç–æ –≤–æ–æ–±—â–µ –ø—Ä–∏–¥—É–º–∞–ª?!",
      emotion: "aggression",
      severity: "high",
      timestamp: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(),
    },
    {
      id: "2",
      chatId: -1001234567891,
      chatTitle: "–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥",
      userId: 987654321,
      username: "maria_s",
      message: "–ù—É –∫–æ–Ω–µ—á–Ω–æ, –æ—Ç–ª–∏—á–Ω–∞—è –∏–¥–µ—è üëè",
      emotion: "sarcasm",
      severity: "medium",
      timestamp: new Date(Date.now() - 4 * 60 * 60 * 1000).toISOString(),
    },
  ],
  teamStats: [
    { name: "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞", members: 12, emotionScore: 85, trend: "up", incidents: 3 },
    { name: "–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥", members: 8, emotionScore: 72, trend: "down", incidents: 1 },
    { name: "–ü—Ä–æ–¥–∞–∂–∏", members: 15, emotionScore: 91, trend: "up", incidents: 0 },
    { name: "HR", members: 5, emotionScore: 88, trend: "stable", incidents: 0 },
    { name: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞", members: 10, emotionScore: 65, trend: "down", incidents: 2 },
  ],
  riskUsers: [
    { userId: 123456789, username: "alexey_k", team: "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞", riskLevel: "high", incidents: 5 },
    { userId: 555666777, username: "ivan_p", team: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞", riskLevel: "medium", incidents: 2 },
  ],
}

export async function GET(request: NextRequest) {
  const { searchParams } = new URL(request.url)
  const period = searchParams.get("period") || "7d"

  // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª –±—ã –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
  // —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –ø–æ –ø–µ—Ä–∏–æ–¥—É

  return NextResponse.json({
    success: true,
    data: mockStats,
    period,
    generatedAt: new Date().toISOString(),
  })
}

export async function POST(request: NextRequest) {
  try {
    const body = await request.json()
    const { action, chatId, userId } = body

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
    switch (action) {
      case "resolve_incident":
        // –û—Ç–º–µ—Ç–∏—Ç—å –∏–Ω—Ü–∏–¥–µ–Ω—Ç –∫–∞–∫ —Ä–µ—à–µ–Ω–Ω—ã–π
        return NextResponse.json({ success: true, message: "–ò–Ω—Ü–∏–¥–µ–Ω—Ç –æ—Ç–º–µ—á–µ–Ω –∫–∞–∫ —Ä–µ—à–µ–Ω–Ω—ã–π" })

      case "warn_user":
        // –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        return NextResponse.json({ success: true, message: "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ" })

      case "generate_report":
        // –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á–µ—Ç
        const report = {
          id: Date.now().toString(),
          period: "7d",
          generatedAt: new Date().toISOString(),
          summary: {
            totalIncidents: mockStats.incidents.length,
            criticalIncidents: mockStats.incidents.filter((i) => i.severity === "critical").length,
            improvementAreas: ["–ö–æ–º–∞–Ω–¥–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏", "–û—Ç–¥–µ–ª —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"],
            recommendations: [
              "–ü—Ä–æ–≤–µ—Å—Ç–∏ —Ç–∏–º–±–∏–ª–¥–∏–Ω–≥ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏",
              "–û—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å —Ç—Ä–µ–Ω–∏–Ω–≥ –ø–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é —Å—Ç—Ä–µ—Å—Å–æ–º",
              "–ü–µ—Ä–µ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞–±–æ—á—É—é –Ω–∞–≥—Ä—É–∑–∫—É –≤ –æ—Ç–¥–µ–ª–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏",
            ],
          },
        }
        return NextResponse.json({ success: true, report })

      default:
        return NextResponse.json({ success: false, error: "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ" }, { status: 400 })
    }
  } catch (error) {
    return NextResponse.json(
      {
        success: false,
        error: "–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞",
      },
      { status: 500 },
    )
  }
}
